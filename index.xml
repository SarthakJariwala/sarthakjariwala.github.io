<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sarthak Jariwala</title>
    <link>https://sarthakjariwala.github.io/</link>
    <description>Recent content on Sarthak Jariwala</description>
    <image>
      <title>Sarthak Jariwala</title>
      <url>https://sarthakjariwala.github.io/105</url>
      <link>https://sarthakjariwala.github.io/105</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Apr 2022 09:54:26 -0700</lastBuildDate><atom:link href="https://sarthakjariwala.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Delete Git Tag</title>
      <link>https://sarthakjariwala.github.io/code/git/deleting_tag/</link>
      <pubDate>Wed, 20 Apr 2022 09:54:26 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/git/deleting_tag/</guid>
      <description>Delete a git tag git tag -d v1.0.1 Here, v1.0.1 is the tag we want to delete.
Remove it from remote/GitHub git push origin :v1.0.1 Note the &amp;ldquo;:&amp;rdquo; before the tag you want to remove from remote.</description>
    </item>
    
    <item>
      <title>Create and Push New Git Tag</title>
      <link>https://sarthakjariwala.github.io/code/git/creating_tag/</link>
      <pubDate>Wed, 20 Apr 2022 09:54:17 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/git/creating_tag/</guid>
      <description>Create a new git tag git tag v1.0.1 View tags git tag --list Push new tag to GitHub git push --tags </description>
    </item>
    
    <item>
      <title>Create New Environment</title>
      <link>https://sarthakjariwala.github.io/code/conda/create-new-environment/</link>
      <pubDate>Wed, 23 Mar 2022 22:44:29 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/conda/create-new-environment/</guid>
      <description>Create a new conda environment # create a new conda environment called ml-ninja conda create --name ml-ninja Create a new environment with packages # create a new environment with python=3.9 and numpy installed conda create --name ml-ninja python=3.9 numpy Verify environment creation conda env list # conda environments: # # base * # ml-ninja </description>
    </item>
    
    <item>
      <title>Pad Numpy Array</title>
      <link>https://sarthakjariwala.github.io/code/numpy/pad-an-array/</link>
      <pubDate>Wed, 23 Mar 2022 21:36:24 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/numpy/pad-an-array/</guid>
      <description>Preliminaries import numpy as np # create an array a = np.array([1, 2, -1]) Pad array on both sides with constant values Add two 3&amp;rsquo;s to the left of the array and four -7&amp;rsquo;s to the right of the array.
np.pad(a, (2, 4), &amp;#34;constant&amp;#34;, constant_values=(3, -7)) # array([ 3, 3, 1, 2, -1, -7, -7, -7, -7]) Pad array on only one side But, what if you only want to pad the right side or left side?</description>
    </item>
    
    <item>
      <title>Swap Axes in Array</title>
      <link>https://sarthakjariwala.github.io/code/numpy/swap-axes-in-an-array/</link>
      <pubDate>Wed, 23 Mar 2022 21:23:56 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/numpy/swap-axes-in-an-array/</guid>
      <description>Preliminary # load library import numpy as np Create a multi-dimensional array m = np.zeros(shape=(100, 32, 50)) Swap dimensions # swap axis 1 and 2 with each other in array `m` m_swapped = np.swapaxes(m, 1, 2) # view the shape m_swapped.shape (100, 50, 32) </description>
    </item>
    
    <item>
      <title>Build &amp; Run a Single Service from docker-compose</title>
      <link>https://sarthakjariwala.github.io/code/docker/build-run-single-service/</link>
      <pubDate>Sat, 25 Sep 2021 19:59:05 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/docker/build-run-single-service/</guid>
      <description>Build and run single service using docker-compose</description>
    </item>
    
    <item>
      <title>Codespell - check spelling</title>
      <link>https://sarthakjariwala.github.io/til/codespell/</link>
      <pubDate>Wed, 04 Aug 2021 21:36:58 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/til/codespell/</guid>
      <description>I came across codespell via Simon Willison&amp;rsquo;s tweet.
Codespell is a python library that provides a cli to check and fix common misspellings in text files.
Just running it against the content of this website, I discovered a few misspellings.
codespell content The changes suggested by codespell can be implemented with a -w flag.</description>
    </item>
    
    <item>
      <title>Dask Executor in Prefect</title>
      <link>https://sarthakjariwala.github.io/code/prefect/local-dask-executor/</link>
      <pubDate>Tue, 03 Aug 2021 16:00:55 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/code/prefect/local-dask-executor/</guid>
      <description>Preliminaries from prefect.executors import LocalDaskExecutor, DaskExecutor from prefect import task, Flow from typing import Iterable Create a Prefect Task # create sample prefect task to run in a flow @task def add(list_of_int: Iterable[int]): return list_of_int[0] + list_of_int[1] Create a Prefect Flow # list of integers to add list_of_ints = [[1, 2], [-3, 5], [4, 5], [9, 0], [3, -8]] # create prefect Flow to run with Dask Executors with Flow(&amp;#34;sample-flow&amp;#34;) as flow: result = add.</description>
    </item>
    
    <item>
      <title>How Sunny is Seattle?</title>
      <link>https://sarthakjariwala.github.io/posts/sunny-in-seattle/</link>
      <pubDate>Sun, 14 Mar 2021 13:35:10 -0700</pubDate>
      
      <guid>https://sarthakjariwala.github.io/posts/sunny-in-seattle/</guid>
      <description>A comparative look at solar resource availability</description>
    </item>
    
    <item>
      <title>Attractive, Effective &amp; Descriptive Image Visualization in Python</title>
      <link>https://sarthakjariwala.github.io/posts/introducing-seaborn-image/</link>
      <pubDate>Fri, 26 Feb 2021 09:56:20 -0800</pubDate>
      
      <guid>https://sarthakjariwala.github.io/posts/introducing-seaborn-image/</guid>
      <description>Introducing `seaborn-image` for image visualization in Python</description>
    </item>
    
    <item>
      <title>Effective Visualization of Multi-Dimension Image Data in Python</title>
      <link>https://sarthakjariwala.github.io/posts/multi-dimension-image-data/</link>
      <pubDate>Wed, 24 Feb 2021 18:59:05 -0800</pubDate>
      
      <guid>https://sarthakjariwala.github.io/posts/multi-dimension-image-data/</guid>
      <description>Got multi-dimensional image data? Python can help!</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://sarthakjariwala.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/about/</guid>
      <description>Sr. Software Engineer at Twelve. Before that I was a Research Scientist at Palo Alto Research Center (PARC)
I work at the intersection of software and hardware interfaces, materials, and machine learning.
I combine my expertise in these areas to solve scientific problems and commercial challenges.
I have published 10+ peer-reviewed articles in leading materials and energy journals. and have extensive experience developing software tools and libraries. You can check out my open-source libraries and tools here.</description>
    </item>
    
    
    <item>
      <title>Automated Defect Discovery Using Deep Learning</title>
      <link>https://sarthakjariwala.github.io/projects/automated-defect-discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/projects/automated-defect-discovery/</guid>
      <description>Deep Learning of Solid-State Transformations and Reaction Pathways in 2D Materials.</description>
    </item>
    
    <item>
      <title>Leveraging Analytics and Characterization to Investigate Heterogeneity</title>
      <link>https://sarthakjariwala.github.io/projects/dma-heterogeneity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/projects/dma-heterogeneity/</guid>
      <description>Elucidating local compositional and structural variations in high-performing solar cells using advanced analytics applied to novel characterization techniques.
Learn more in the paper: Jariwala et al., ACS Energy Lett. 2022, 7, 1, 204â€“210.</description>
    </item>
    
    <item>
      <title>Open Source Software</title>
      <link>https://sarthakjariwala.github.io/open-source-software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/open-source-software/</guid>
      <description>I create and maintain various open source software libraries and applications. Below is a list of some of the projects:
seaborn-image High-level API for attractive and descriptive image visualization in Python.
GitHub | Documentation | Introductory Post
EZconda Create, Manage, Re-create conda environments &amp;amp; specifications with ease.
GitHub | Documentation
nrel-dev-api Developer friendly Python API for accessing National Renewable Energy Lab developer resources.
GitHub | Documentation | Introductory Post
prayog Optimization API for experimental science.</description>
    </item>
    
    <item>
      <title>Predicting Peptide Interface Parameters</title>
      <link>https://sarthakjariwala.github.io/projects/predictive-peptides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/projects/predictive-peptides/</guid>
      <description>Used image processing and machine learning for predictive analysis of self-assembled peptides on various substrates as imaged using Atomic Force Microscope.
Developed software framework using image processing and machine learning to identify different textural components and their segmentation in Atomic Force Microscope (AFM) images of self-assembled peptide structures.
From AFM image data, the software helps end users:
Approximate the effect of natural tip drift which is ubiquitous in AFM characterization Correct for noise Detect different textures based on how ordered or disordered the self-assembly is Calculate: Percent coverage of each texture Overall percent coverage of the self assembled peptides Ordered to disordered ratio (Degree of disorder) This helps evaluate the self assembly properties of the peptides on the substrates for the processing conditions.</description>
    </item>
    
    
    <item>
      <title>Solar Techno Economic Analysis</title>
      <link>https://sarthakjariwala.github.io/projects/solar-techno-economic-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/projects/solar-techno-economic-analysis/</guid>
      <description>As a senior technical member of Global Renewable Infrastructure Development (GRID) at the University of Washington :
Performed techno-economic analysis using SAM (System Advisor Model) and PySAM for designing a solar-powered school &amp;amp; community library in rural Ghana.
Developed remote data tracking system for monitoring the health and performance of installed solar modules and microgrids.</description>
    </item>
    
    <item>
      <title>Structure Property Relationships in Next-Gen Solar Materials</title>
      <link>https://sarthakjariwala.github.io/projects/structure-property-relationships/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sarthakjariwala.github.io/projects/structure-property-relationships/</guid>
      <description>Elucidate structure-property relationships in next-generation solar cell technology.
Used statistical methods in combination with expertise in image &amp;amp; data analysis and domain knowledge to elucidate structure-property relationships in next-generation solar cell technology.
Learn more about the project in the news coverage and paper.</description>
    </item>
    
  </channel>
</rss>
